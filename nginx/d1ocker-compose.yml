version: '3.3'
services:

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/



volumes:
  pg_data:
  static:
  media:

services:
  db:
    container_name: foodgram-db
    image: postgres:15
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  backend:
    container_name: foodgram-back
    build: backend/
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - static:/app/staticfiles/
      - media:/app/media/
    restart: unless-stopped

  frontend:
    container_name: foodgram-front
    build: frontend/
    env_file:
      - .env
    # command: cp -r /app/build/. /frontend_static/
    # command: ["sh", "-c", "cp -r /app/build/* /frontend_static"]
    volumes:
      # - static:/app/result_build/
      - ./frontend_static:/frontend_static
    restart: "no"

  gateway:
    container_name: foodgram-proxy
    # build: ../nginx/
    image: nginx:1.25.4-alpine
    env_file:
      - .env
    ports:
      - 8000:80
    volumes:
      - static:/static/
      - media:/media/
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docs/:/usr/share/nginx/html/api/docs/
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
